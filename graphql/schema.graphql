#import originaltype.graphql
#import mutation.graphql

type PageInfo {
  currentPage: Int
  lastPage: Int
}

type TransactionsPageInfo {
  data: [Transaction!]
  page: PageInfo
}

type DashboardInfo {
  totalIncome: Float
  totalExpense: Float
  totalAsset: Float
  profit: Float
}

type Query @middleware(checks: ["auth:airlock"]) {
  me: User @auth
  dashboardData: DashboardInfo! @field(resolver: "TransactionQuery@dashboardInfo")
  categories: [Category] @all 
  categoriesByPage: [Category!] @paginate

  categoriesWithType(type: CategoryType! @eq): [Category!] @all 
  category(id: ID @eq): Category @find

  transactions(first: Int = 20,page: Int = 1,dateRange: String= ""): TransactionsPageInfo @field(resolver: "TransactionQuery@showAll")
  transaction(id: ID @eq): Transaction @find
  transactionsByCategory(categoryID: ID,first: Int,page: Int,dateRange: String= ""): TransactionsPageInfo @field(resolver: "TransactionQuery@categoryData")
  transactionSearch(q: String!, first: Int,page: Int,dateRange: String=""): TransactionsPageInfo @field(resolver: "TransactionQuery@searchTransaction")
  
}

